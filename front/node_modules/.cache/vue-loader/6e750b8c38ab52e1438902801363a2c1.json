{"remainingRequest":"E:\\__Web Dev__ Formation\\FatetSeraphin_7_12072021\\front\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!E:\\__Web Dev__ Formation\\FatetSeraphin_7_12072021\\front\\src\\components\\Login_Page\\Login.vue?vue&type=style&index=1&id=211fb1a2&lang=css","dependencies":[{"path":"E:\\__Web Dev__ Formation\\FatetSeraphin_7_12072021\\front\\src\\components\\Login_Page\\Login.vue","mtime":1628112949825},{"path":"E:\\__Web Dev__ Formation\\FatetSeraphin_7_12072021\\front\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\__Web Dev__ Formation\\FatetSeraphin_7_12072021\\front\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1626466876000},{"path":"E:\\__Web Dev__ Formation\\FatetSeraphin_7_12072021\\front\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\__Web Dev__ Formation\\FatetSeraphin_7_12072021\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\__Web Dev__ Formation\\FatetSeraphin_7_12072021\\front\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1626466876000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgLyogLS0tIEFsZXJ0IE1lc3NhZ2UgLS0tICovDQogICAgLyogLmZvcm0tYWxlcnQgew0KICAgICAgICBoZWlnaHQ6IDMwcHg7DQogICAgICAgIGJvdHRvbTogLTM4cHg7DQogICAgfQ0KDQogICAgLnNlcnZlci1hbGVydCB7DQogICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICAgICAgdG9wOiAwOw0KICAgICAgICBsZWZ0OiA1MCU7DQogICAgICAgIGhlaWdodDogNDBweDsNCiAgICAgICAgbWFyZ2luLXRvcDogMzBweDsNCiAgICAgICAgZm9udC1zaXplOiAxMDAlOw0KICAgICAgICBmb250LXdlaWdodDogNDAwOw0KICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7DQogICAgfSAqLw0K"},{"version":3,"sources":["E:\\__Web Dev__ Formation\\FatetSeraphin_7_12072021\\front\\src\\components\\Login_Page\\Login.vue"],"names":[],"mappings":";IAwNI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;IAC1B,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB;;IAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;QACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClB,CAAC,CAAC,CAAC,EAAE,CAAC;QACN,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,EAAE,CAAC","file":"E:/__Web Dev__ Formation/FatetSeraphin_7_12072021/front/src/components/Login_Page/Login.vue","sourceRoot":"","sourcesContent":["<template>\r\n\r\n    <section class=\"flexCenter login\">\r\n        <button class=\"login-btn\" @click=\"showLogin()\">Connexion</button>\r\n        \r\n        <form class=\"flexCenter login-form\" method=\"POST\">\r\n            <div class=\"flexCenter field-container\">\r\n                <label for=\"email\">E-mail</label>\r\n                <input class=\"log-input\" name=\"email\" id=\"email\" type=\"email\" placeholder=\"Entrer votre E-mail\" v-model=\"email\">\r\n\r\n                <transition name=\"fade\">\r\n                    <p class=\"flexCenter form-alert\" v-show=\"emailAlert\">{{ emailMsg }}</p>\r\n                </transition>\r\n            </div>\r\n\r\n            <div class=\"flexCenter field-container\">\r\n                <label for=\"password\">Mot de passe</label>\r\n                <input class=\"log-input\" name=\"password\" id=\"password\" type=\"password\" placeholder=\"Entrer votre mot de passe\" v-model=\"password\">\r\n                \r\n                <transition name=\"fade\">\r\n                    <p class=\"flexCenter form-alert\" v-show=\"pswAlert\">{{ pswMsg }}</p>\r\n                </transition>\r\n            </div>\r\n\r\n            <transition name=\"slideSide\">\r\n                <h3 class=\"flexCenter form-alert server-alert\" v-show=\"serverAlert\">{{ serverMsg }}</h3>\r\n            </transition>\r\n\r\n            <button class=\"btn\" @click.prevent=\"login()\" type=\"submit\">Se Connecter</button>\r\n        </form>\r\n    </section>\r\n\r\n</template>\r\n\r\n<script>\r\n    import generic from \"../../generic-methods.js\"\r\n\r\n    export default {\r\n        name: \"Login\",\r\n\r\n        mixins: [\r\n            generic,\r\n        ],\r\n\r\n        props: {\r\n            isLoading: Boolean,\r\n            isSwapPages: Boolean,\r\n            swapPageAlert: Boolean,\r\n            swapPageMsg: String,\r\n        },\r\n\r\n        data() {\r\n            return {\r\n                timeOutDuration: 2500, // <== miliseconds\r\n\r\n                email: \"\",\r\n                password: \"\",\r\n\r\n                emailValid: false,\r\n                emailAlert: false,\r\n                emailMsg: \"\",\r\n                \r\n                passwordValid: false,\r\n                pswAlert: false,\r\n                pswMsg: \"\",\r\n\r\n                isInfosCorrects: false,\r\n\r\n                emptyField: \"Le champ est vide !\",\r\n                wrongRegEx: \"Champ invalide !\",\r\n\r\n                serverAlert: false,\r\n                serverMsg: \"\",\r\n            }\r\n        },\r\n        \r\n        methods: {\r\n            showLogin() {\r\n                document.querySelector(\".login\").style.zIndex = \"10\";\r\n                document.querySelector(\".signin\").style.zIndex = \"1\";\r\n            },\r\n\r\n\r\n            formValid(formData, inputField, regEx, elemString) {\r\n                // If input field is empty\r\n                if (inputField === \"\") {\r\n                    if(elemString === \"email\") {this.emailAlert = true; this.emailMsg = this.emptyField}\r\n                    if(elemString === \"password\") {this.pswAlert = true; this.pswMsg = this.emptyField}\r\n                }\r\n\r\n                // If regEx is wrong\r\n                else if (!regEx.test(inputField)) {\r\n                    if(elemString === \"email\") {this.emailAlert = true; this.emailMsg = this.wrongRegEx}\r\n                    if(elemString === \"password\") {this.pswAlert = true; this.pswMsg = this.wrongRegEx}\r\n                }\r\n                \r\n                // If all informations are corrects\r\n                else {\r\n                    formData.set(elemString, inputField);\r\n\r\n                    if(elemString === \"email\") this.emailValid = true;\r\n                    if(elemString === \"password\") this.passwordValid = true;\r\n                }\r\n            },\r\n\r\n\r\n            getPersonInfos() {\r\n                // Have to contain: \r\n                //  LETTER || letter || number || dot || under score || dash\r\n                //  && at (@) &&\r\n                //  LETTER || letter || number && dot && LETTER || letter\r\n                const emailRegEx = new RegExp(/^[A-Za-z0-9._-]+[@]+[A-Za-z0-9]+[.]+[A-Za-z]+$/);\r\n\r\n                // Have to contain: LETTER || letter || number || accent letters || number\r\n                const passwordRegEx = new RegExp(/^[A-Za-zÜ-ü0-9!@#$%^&*]+$/);\r\n                \r\n                const postForm = document.querySelector(\".login-form\");\r\n                const formData = new FormData(postForm)\r\n\r\n                this.formValid(formData, this.email, emailRegEx, \"email\");\r\n                this.formValid(formData, this.password, passwordRegEx, \"password\");\r\n\r\n                if(this.emailValid && this.passwordValid) this.isInfosCorrects = true;\r\n\r\n                return formData;\r\n            },\r\n            \r\n\r\n            async postDataLogin(formData) {\r\n                this.$parent.$parent.isLoading = true;\r\n\r\n                const response = await fetch(\"http://localhost:3000/api/auth/login\", {\r\n                    headers: {\"Content-Type\": \"application/json; charset=UTF-8\"},\r\n                    method: \"POST\",\r\n                    body: JSON.stringify(formData)\r\n                });\r\n                \r\n                try {\r\n                    this.$parent.$parent.isLoading = false;\r\n                    const session = await response.json();\r\n                    \r\n                    this.log_Base(session, \"invalide\", this.timeOutDuration, \"\");\r\n                }\r\n                catch(error) { console.log(\"error\", error) }\r\n            },\r\n\r\n\r\n            clearInputFields() {\r\n                const allFields = document.querySelectorAll(\".log-input\");\r\n                allFields.forEach( field => field.value = \"\");\r\n            },\r\n\r\n\r\n            login() {\r\n                const formData = this.getPersonInfos();\r\n                formData.forEach((key, value) => formData[value] = key);\r\n\r\n                if(this.isInfosCorrects) this.postDataLogin(formData);\r\n                \r\n                setTimeout(() => {\r\n                    this.emailAlert = false;\r\n                    this.pswAlert = false;\r\n                }, this.timeOutDuration);\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n\r\n<style scoped lang=\"scss\">\r\n    \r\n    $pageColor: skyblue;\r\n\r\n    .login {\r\n        z-index: 10;\r\n        border-radius: 0 15px 15px 15px;\r\n        background: linear-gradient(to top, lightgray, $pageColor);\r\n    }\r\n\r\n    .login,\r\n    .login-btn {\r\n        border: solid $pageColor 3px;\r\n    }\r\n\r\n    .login-btn {\r\n        left: -3px;\r\n        background-color: $pageColor;\r\n    }\r\n\r\n    .login-form {\r\n        height: 70%;\r\n    }\r\n\r\n    input {\r\n        height: 30px;\r\n        margin-top: 8px;\r\n    }\r\n    .form-alert {\r\n        height: 30px;\r\n        bottom: -38px;\r\n    }\r\n\r\n    .server-alert {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 50%;\r\n        height: 40px;\r\n        margin-top: 30px;\r\n        font-size: 100%;\r\n        font-weight: 400;\r\n        transform: translateX(-50%);\r\n    }\r\n</style>\r\n\r\n\r\n<style>\r\n    /* --- Alert Message --- */\r\n    /* .form-alert {\r\n        height: 30px;\r\n        bottom: -38px;\r\n    }\r\n\r\n    .server-alert {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 50%;\r\n        height: 40px;\r\n        margin-top: 30px;\r\n        font-size: 100%;\r\n        font-weight: 400;\r\n        transform: translateX(-50%);\r\n    } */\r\n</style>"]}]}